generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "interactiveTransactions"]
  engineType      = "binary"
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  directUrl            = env("DIRECT_URL")
  referentialIntegrity = "prisma"
}

model Chat {
  id       String     @id @unique(map: "id") @db.VarChar(70)
  users    UserChat[]
  messages Message[]
}

model User {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  image      String     @db.VarChar(255)
  rating     Float?     @default(0.0)
  email      String?    @unique(map: "email") @db.VarChar(255)
  isVerified Boolean?   @default(false)
  money      Decimal?   @default(0.00) @db.Decimal(10, 2)
  chats      UserChat[]
  messages   Message[]
  reviews    Review[]
  products   Product[]
}

model UserChat {
  id     Int    @id @default(autoincrement())
  userId Int
  chatId String @db.VarChar(255)
  user   User   @relation(fields: [userId], references: [id])
  chat   Chat   @relation(fields: [chatId], references: [id])

  @@index([chatId], map: "chatIdIdx")
  @@index([userId], map: "userChatUserIdIdx")
}

model Message {
  id      Int       @id @default(autoincrement())
  time    DateTime? @default(now())
  userId  Int
  chatId  String    @db.VarChar(70)
  text    String    @db.Text
  wasRead Boolean?  @default(false)
  user    User      @relation(fields: [userId], references: [id])
  chat    Chat      @relation(fields: [chatId], references: [id])

  @@index([chatId], map: "messageChatIdIdx")
  @@index([userId], map: "messageUserIdIdx")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  image    String    @db.VarChar(255)
  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String?  @db.VarChar(255)
  description String?  @db.Text
  categoryId  Int
  userId      Int
  image       String?  @db.VarChar(255)
  price       Decimal? @db.Decimal(10, 2)
  isPremium   Boolean? @default(false)
  isSold      Boolean? @default(false)
  user        User     @relation(fields: [userId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
  reviews     Review[]

  @@index([categoryId], map: "categoryIdIdx")
  @@index([userId], map: "userIdIdx")
}

model Review {
  id        Int       @id @default(autoincrement())
  buyerId   Int
  productId Int
  rating    Int
  text      String?   @db.Text
  date      DateTime? @default(now())
  buyer     User      @relation(fields: [buyerId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])

  @@index([buyerId], map: "buyerIdIdx")
  @@index([productId], map: "productIdIdx")
}
