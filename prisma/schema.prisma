generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "interactiveTransactions", "driverAdapters"]
  engineType      = "binary"
}

datasource db {
  provider             = "sqlite"
  url      = "file:./dev.db"
  referentialIntegrity = "prisma"
}

model Chat {
  id       String     @id @unique(map: "id") 
  users    UserChat[]
  messages Message[]
}

model User {
  id         Int        @id @default(autoincrement())
  name       String     
  image      String     
  rating     Float?     @default(0.0)
  email      String?    @unique(map: "email")
  isVerified Boolean?   @default(false)
  money      Decimal?   @default(0.00)
  chats      UserChat[]
  messages   Message[]
  reviews    Review[]
  products   Product[]
}

model UserChat {
  id     Int    @id @default(autoincrement())
  userId Int
  chatId String 
  user   User   @relation(fields: [userId], references: [id])
  chat   Chat   @relation(fields: [chatId], references: [id])

  @@index([chatId], map: "chatIdIdx")
  @@index([userId], map: "userIdIdx")
}

model Message {
  id      Int       @id @default(autoincrement())
  time    DateTime? @default(now()) 
  userId  Int
  chatId  String    
  text    String    
  wasRead Boolean?  @default(false)
  user    User      @relation(fields: [userId], references: [id])
  chat    Chat      @relation(fields: [chatId], references: [id])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    
  image    String    
  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String?  
  description String? 
  categoryId  Int
  userId      Int
  image       String?  
  price       Decimal? 
  isPremium   Boolean? @default(false)
  isSold      Boolean? @default(false)
  user        User     @relation(fields: [userId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
  reviews     Review[]

}

model Review {
  id        Int       @id @default(autoincrement())
  buyerId   Int
  productId Int
  rating    Int
  text      String?   
  date      DateTime? @default(now())
  buyer     User      @relation(fields: [buyerId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])

  @@index([buyerId], map: "buyerIdIdx")
  @@index([productId], map: "productIdIdx")
}
